// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebGallery.Repositories.Contexts;

#nullable disable

namespace WebGallery.Migrations.Statistics
{
    [DbContext(typeof(StatisticsContext))]
    [Migration("20251017192656_InitialStatistics")]
    partial class InitialStatistics
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebGallery.Models.Statistics.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("page_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("page_path");

                    b.HasKey("Id");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("pages");
                });

            modelBuilder.Entity("WebGallery.Models.Statistics.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("visit_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("visit_date");

                    b.Property<string>("Method")
                        .HasColumnType("text")
                        .HasColumnName("visited_method");

                    b.Property<int?>("PageKey")
                        .HasColumnType("integer")
                        .HasColumnName("visited_page_id");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone")
                        .HasColumnName("visit_time");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text")
                        .HasColumnName("user_agent");

                    b.HasKey("Id");

                    b.HasIndex("PageKey");

                    b.ToTable("page_visits");
                });

            modelBuilder.Entity("WebGallery.Models.Statistics.Visit", b =>
                {
                    b.HasOne("WebGallery.Models.Statistics.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageKey");

                    b.Navigation("Page");
                });
#pragma warning restore 612, 618
        }
    }
}
